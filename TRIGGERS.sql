
/* TRIGGER QUE ADICIONA UM VALOR AO CAMPO 'IDADE' APÓS UMA INSERÇÃO NA TABELA DE ACORDO COM O VALOR DO
 CAMPO 'DATA_DE_NASCIMENTO': */
DELIMITER $$

CREATE TRIGGER APOS_INSERIR_PESSOA
BEFORE INSERT ON PESSOA
FOR EACH ROW
BEGIN 
	SET NEW.IDADE = TIMESTAMPDIFF(YEAR, NEW.DATA_DE_NASCIMENTO, CURDATE());
END $$	

DELIMITER ;

DELIMITER $$

/* MESMA IMPLEMENTAÇÃO DA TRIGGER ACIMA, SÓ QUE PARA CASOS DE ATUALIZAÇÃO NA TABELA */
CREATE TRIGGER APOS_ATUALIZAR_PESSOA

BEFORE UPDATE ON PESSOA
FOR EACH ROW
BEGIN 
	SET NEW.IDADE = TIMESTAMPDIFF(YEAR, NEW.DATA_DE_NASCIMENTO, CURDATE());
END $$

DELIMITER ;


-- TRIGGER QUE GARANTE QUE A DATA DO MOVIMENTO DA CONTA É MENOR QUE A DATA ATUAL:
DELIMITER $$

CREATE TRIGGER VALIDAR_DATA_MOVIMENTO
BEFORE INSERT ON MOVIMENTO_CONTA
FOR EACH ROW
BEGIN
	IF NEW.DATA_DO_MOVIMENTO > CURDATE() THEN
		SIGNAL SQLSTATE '45000'	
        SET MESSAGE_TEXT = 'A COLUNA "DATA_DO_MOVIMENTO" NÃO PODE RECEBER VALORES ACIMA DA DATA ATUAL ';
	END IF;
		
END $$

DELIMITER ;


/* TRIGGER QUE ATUALIZA O VALOR DO CAMPO 'SALDO' NA TABELA 'CONTA' DE ACORDO COM O DO MOVIMENTO
QUE É INSERIDO EM 'MOVIMENTO_CONTA':
*/
DELIMITER $$

CREATE TRIGGER ATUALIZAR_VALOR_SALDO
AFTER INSERT ON MOVIMENTO_CONTA
FOR EACH ROW

BEGIN

	-- VERIFICANDO SE HÁ SALDO DISPONÍVEL EM CASOS DE VALORES NEGATIVOS:
	IF NEW.VALOR_DO_MOVIMENTO < 0 THEN 
		IF(SELECT SALDO FROM CONTA WHERE ID_DA_CONTA = NEW.ID_DA_CONTA) + NEW.VALOR_DO_MOVIMENTO < 0 THEN
			SIGNAL SQLSTATE '45000'
			SET MESSAGE_TEXT = 'O VALOR DO SEU SALDO É MENOR QUE O VALOR DA RETIRADA, CONSIDERE CHECAR O VALOR';
		END IF;
    END IF;
    
	UPDATE CONTA
    SET SALDO = SALDO + NEW.VALOR_DO_MOVIMENTO
	WHERE ID_DA_CONTA = NEW.ID_DA_CONTA;
END $$
	
DELIMITER ;
